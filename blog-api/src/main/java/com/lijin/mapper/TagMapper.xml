<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lijin.mapper.TagMapper" >
  <resultMap id="BaseResultMap" type="com.lijin.pojo.Tag" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="tagname" property="tagname" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, avatar, tagname, category_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lijin.pojo.TagExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tag
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tag
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tag
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lijin.pojo.TagExample" >
    delete from tag
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lijin.pojo.Tag" >
    insert into tag (id, avatar, tagname, 
      category_id)
    values (#{id,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, #{tagname,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lijin.pojo.Tag" >
    insert into tag
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="tagname != null" >
        tagname,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="tagname != null" >
        #{tagname,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lijin.pojo.TagExample" resultType="java.lang.Integer" >
    select count(*) from tag
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tag
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.tagname != null" >
        tagname = #{record.tagname,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tag
    set id = #{record.id,jdbcType=INTEGER},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      tagname = #{record.tagname,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lijin.pojo.Tag" >
    update tag
    <set >
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="tagname != null" >
        tagname = #{tagname,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lijin.pojo.Tag" >
    update tag
    set avatar = #{avatar,jdbcType=VARCHAR},
      tagname = #{tagname,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllDetail" resultType="com.lijin.vo.TagVO">
    select t.*,count(at.tag_id) as articles
    from articletag at
    right join tag t
    on t.id = at.tag_id
    group by t.id
  </select>
  <select id="getTagDetail" resultType="com.lijin.vo.TagVO" parameterType="java.lang.Integer">
    select t.*,count(at.tag_id) as articles
    from articletag at
    right join tag t
    on t.id = at.tag_id
    where t.id = #{value}
  </select>
  <select id="listHotTagsByArticleUse" parameterType="java.lang.Integer" resultType="com.lijin.pojo.Tag">
    select t.*,count(at.tag_id) as count
    from articletag at
    right join tag t on t.id = at.tag_id
    group by t.id order by count(at.tag_id) desc
    limit 0,#{value}
  </select>
  <insert id="save" parameterType="com.lijin.pojo.Tag" useGeneratedKeys="true" keyProperty="id">
    insert into tag (id, avatar, tagname,
      category_id)
    values (#{id,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, #{tagname,jdbcType=VARCHAR},
      #{category.id,jdbcType=INTEGER})
  </insert>
  <select id="getByArticleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select t.*
    from tag t,articletag at
    <where>
      t.id=at.tag_id and at.article_id=#{value}
    </where>
  </select>
  <select id="search" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tag
    <where>
      tagname like '%${search.word}%'
    </where>
  </select>
</mapper>