<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lijin.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lijin.pojo.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="admin" property="admin" jdbcType="BIT" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="last_login" property="lastLogin" jdbcType="TIMESTAMP" />
    <result column="mobile_phone_number" property="mobilePhoneNumber" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account, admin, avatar, create_date, deleted, email, last_login, mobile_phone_number, 
    nickname, password, salt, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lijin.pojo.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lijin.pojo.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lijin.pojo.User" >
    insert into user (id, account, admin, 
      avatar, create_date, deleted, 
      email, last_login, mobile_phone_number, 
      nickname, password, salt, 
      status)
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{admin,jdbcType=BIT}, 
      #{avatar,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, 
      #{email,jdbcType=VARCHAR}, #{lastLogin,jdbcType=TIMESTAMP}, #{mobilePhoneNumber,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lijin.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="admin != null" >
        admin,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="mobilePhoneNumber != null" >
        mobile_phone_number,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="admin != null" >
        #{admin,jdbcType=BIT},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="mobilePhoneNumber != null" >
        #{mobilePhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lijin.pojo.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.admin != null" >
        admin = #{record.admin,jdbcType=BIT},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLogin != null" >
        last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobilePhoneNumber != null" >
        mobile_phone_number = #{record.mobilePhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      admin = #{record.admin,jdbcType=BIT},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      email = #{record.email,jdbcType=VARCHAR},
      last_login = #{record.lastLogin,jdbcType=TIMESTAMP},
      mobile_phone_number = #{record.mobilePhoneNumber,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lijin.pojo.User" >
    update user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="admin != null" >
        admin = #{admin,jdbcType=BIT},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="mobilePhoneNumber != null" >
        mobile_phone_number = #{mobilePhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lijin.pojo.User" >
    update user
    set account = #{account,jdbcType=VARCHAR},
      admin = #{admin,jdbcType=BIT},
      avatar = #{avatar,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      mobile_phone_number = #{mobilePhoneNumber,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="save" parameterType="com.lijin.pojo.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (id, account, admin,
      avatar, create_date, deleted,
      email, last_login, mobile_phone_number,
      nickname, password, salt,
      status)
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{admin,jdbcType=BIT},
      #{avatar,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT},
      #{email,jdbcType=VARCHAR}, #{lastLogin,jdbcType=TIMESTAMP}, #{mobilePhoneNumber,jdbcType=VARCHAR},
      #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
      #{status,jdbcType=VARCHAR})
  </insert>
  <select id="search" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      nickname like '%${search.word}%'
    </where>
  </select>
  <select id="getFollow" parameterType="Integer" resultMap="BaseResultMap">
    select u.*
    from follow f,user u
    <where>
      f.user_id=#{value } and f.follower_id=u.id
    </where>
  </select>
  <select id="getauthors" parameterType="Integer" resultMap="BaseResultMap">
    select u.*
    from follow f,user u
    <where>
      f.user_id=u.id and f.follower_id=#{value }
    </where>
  </select>
</mapper>